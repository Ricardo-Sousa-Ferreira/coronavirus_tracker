{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/lepracone/personal-projects/coronavirus_tracker/components/CountrySelector.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useStats from \"../utils/useStats.js\";\n\nfunction CountrySelector() {\n  return _CountrySelector.apply(this, arguments);\n}\n\n_c2 = CountrySelector;\n\nfunction _CountrySelector() {\n  var _s = $RefreshSig$();\n\n  _CountrySelector = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _this = this;\n\n    var countries;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            _context.next = 3;\n            return useStats('https://covid19.mathdro.id/api/countries');\n\n          case 3:\n            countries = _context.sent;\n            then.console.log(countries.countries);\n\n            if (countries) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", __jsx(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 6,\n                columnNumber: 27\n              }\n            }, \"Loading...\"));\n\n          case 7:\n            return _context.abrupt(\"return\", __jsx(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 8,\n                columnNumber: 5\n              }\n            }, __jsx(\"select\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 9,\n                columnNumber: 8\n              }\n            }, countries.countries.map(function (country) {\n              __jsx(\"option\", {\n                key: country.iso2,\n                value: country.iso2,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 11,\n                  columnNumber: 11\n                }\n              }, country.name);\n            }))));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }), \"x6Oqn1ZbFTIx06mK7LuF4fYwrhc=\", false, function () {\n    return [useStats];\n  }));\n  return _CountrySelector.apply(this, arguments);\n}\n\n_c = CountrySelector;\nexport default CountrySelector;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CountrySelector\");\n$RefreshReg$(_c2, \"CountrySelector\");","map":{"version":3,"sources":["/home/lepracone/personal-projects/coronavirus_tracker/components/CountrySelector.js"],"names":["useStats","CountrySelector","countries","then","console","log","map","country","iso2","name"],"mappings":";;;;;AAAA,OAAOA,QAAP,MAAqB,sBAArB;;SAEeC,e;;;;MAAAA,e;;;;;iFAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAC4BD,QAAQ,CAAC,0CAAD,CADpC;;AAAA;AACUE,YAAAA,SADV;AAEIC,YAAAA,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiBH,SAAS,CAACA,SAA3B;;AAFJ,gBAGQA,SAHR;AAAA;AAAA;AAAA;;AAAA,6CAG0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAH1B;;AAAA;AAAA,6CAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACCA,SAAS,CAACA,SAAV,CAAoBI,GAApB,CAAwB,UAACC,OAAD,EAAa;AACnC;AACE,gBAAA,GAAG,EAAEA,OAAO,CAACC,IADf;AAEE,gBAAA,KAAK,EAAED,OAAO,CAACC,IAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAIGD,OAAO,CAACE,IAJX;AAMD,aAPD,CADD,CADH,CALJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;YAC4BT,Q;;;;;KADbC,e;AAoBf,eAAeA,eAAf","sourcesContent":["import useStats from \"../utils/useStats.js\"\n\nasync function CountrySelector() {\n    const countries = await useStats('https://covid19.mathdro.id/api/countries');\n    then.console.log(countries.countries)\n    if(!countries) return <p>Loading...</p>\n    return (\n    <div>\n       <select>\n       {countries.countries.map((country) => {\n          <option\n            key={country.iso2}\n            value={country.iso2}\n          >\n            {country.name}\n          </option>\n        })}\n       </select>\n    </div>\n    )\n}\n\nexport default CountrySelector"]},"metadata":{},"sourceType":"module"}